mp.messaging.outgoing.vessel-positions.connector=liberty-kafka
mp.messaging.outgoing.vessel-positions.topic=vesselPositions
mp.messaging.outgoing.vessel-positions.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.vessel-positions.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.connector.liberty-kafka.bootstrap.servers=localhost:9092
mp.messaging.connector.liberty-kafka.bootstrap.servers=broker-0-qnprtqnp7hnkssdz.kafka.svc01.us-east.eventstreams.cloud.ibm.com:9093,broker-1-qnprtqnp7hnkssdz.kafka.svc01.us-east.eventstreams.cloud.ibm.com:9093,broker-2-qnprtqnp7hnkssdz.kafka.svc01.us-east.eventstreams.cloud.ibm.com:9093,broker-4-qnprtqnp7hnkssdz.kafka.svc01.us-east.eventstreams.cloud.ibm.com:9093,broker-3-qnprtqnp7hnkssdz.kafka.svc01.us-east.eventstreams.cloud.ibm.com:9093,broker-5-qnprtqnp7hnkssdz.kafka.svc01.us-east.eventstreams.cloud.ibm.com:9093
# If connecting to Event Streams on IBM Cloud or to any Kafka deployment with SSL security
mp.messaging.connector.liberty-kafka.security.protocol=SASL_SSL
mp.messaging.connector.liberty-kafka.ssl.protocol=TLSv1.2
mp.messaging.connector.liberty-kafka.sasl.mechanism=PLAIN
# Make sure you set the username and API key at the end
#mp.messaging.connector.liberty-kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='token' password='';
message="I'm alive"
mp.messaging.connector.liberty-kafka.acks="1"
mp.messaging.connector.liberty-kafka.enable.idempotence=false
